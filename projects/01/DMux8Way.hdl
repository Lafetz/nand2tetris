// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux4Way(in=in , sel=sel[0..1] , a=ta , b=tb , c=tc , d=td );
    DMux4Way(in=in , sel=sel[0..1] , a=te , b=tf , c=tg , d=th );
    Not(in=sel[2] , out=msel );
    And(a=ta, b=msel , out=a );
    And(a=tb, b=msel , out=b );
    And(a=tc , b=msel , out=c );
    And(a=td , b=msel , out=d );
    And(a=te, b=sel[2] , out=e );
    And(a=tf, b=sel[2] , out=f );
    And(a=tg , b=sel[2] , out=g );
    And(a=th , b=sel[2] , out=h );
    
    //// Replace this comment with your code.
}